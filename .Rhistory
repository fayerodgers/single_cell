samples<-scan(args[1],what=character())
samples
meta_data <- read.table('samples.txt',header=T)
meta_data
args
args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData','cellranger302')
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
cellranger_version<-args[4]
meta_data
meta_data[which(meta_data$sample_id == '4672STDY6814755',]
meta_data[which(meta_data$sample_id == '4672STDY6814755'),]
meta_data[which(meta_data$sample_id == '4672STDY6814755'),mouse_id]
meta_data[which(meta_data$sample_id == '4672STDY6814755'),'mouse_id']
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
cellranger_version<-args[4]
library(reticulate)
library(Seurat)
library(Matrix)
library(dplyr)
library(metap)
library(ggplot2)
library(ggrepel)
library(cowplot)
use_python("/Users/fr7/miniconda2/bin/python",required=TRUE)
i=1
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = meta_data[which(meta_data$sample_id == sample),'mouse_id'] )
seurat_object$infection_status <- meta_data[which(meta_data$sample_id == sample),'infection_status']
seurat_object$experiment_number <- meta_data[which(meta_data$sample_id == sample),'experiment']
samples <- c(samples, mouse)
i = i+1
}
meta_data[which(meta_data$sample_id == '4672STDY6814755'),'mouse_id']
as.character(meta_data[which(meta_data$sample_id == '4672STDY6814755'),'mouse_id'])
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = as.character((meta_data[which(meta_data$sample_id == sample),'mouse_id'] )))
seurat_object$infection_status <- meta_data[which(meta_data$sample_id == sample),'infection_status']
seurat_object$experiment_number <- meta_data[which(meta_data$sample_id == sample),'experiment']
samples <- c(samples, mouse)
}
View(seurat_object)
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = as.character((meta_data[which(meta_data$sample_id == sample),'mouse_id'] )))
seurat_object[["infection_status"]] <- meta_data[which(meta_data$sample_id == sample),'infection_status']
#  seurat_object$infection_status <- meta_data[which(meta_data$sample_id == sample),'infection_status']
#  seurat_object$experiment_number <- meta_data[which(meta_data$sample_id == sample),'experiment']
objects <- c(objects, seurat_object)
}
meta_data[which(meta_data$sample_id == sample),'infection_status']
meta_data[which(meta_data$sample_id == sample),'treatment']
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = as.character((meta_data[which(meta_data$sample_id == sample),'mouse_id'] )))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
#  seurat_object$infection_status <- meta_data[which(meta_data$sample_id == sample),'infection_status']
#  seurat_object$experiment_number <- meta_data[which(meta_data$sample_id == sample),'experiment']
objects <- c(objects, seurat_object)
}
objects
meta_data
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
objects <- c(objects, seurat_object)
assign(paste0(sample),seurat_object)
}
objects
View(`4672STDY7623913`)
objects<-c()
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
objects <- c(objects, seurat_object)
assign(paste0(sample),seurat_object)
}
library(reticulate)
library(Seurat)
library(Matrix)
library(dplyr)
library(metap)
library(ggplot2)
library(ggrepel)
library(cowplot)
use_python("/Users/fr7/miniconda2/bin/python",required=TRUE)
args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData')
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
cellranger_version<-args[4]
meta_data <- read.table('samples.txt',header=T)
#For a set of control and infected libraries,
library(reticulate)
library(Seurat)
library(Matrix)
library(dplyr)
library(metap)
library(ggplot2)
library(ggrepel)
library(cowplot)
use_python("/Users/fr7/miniconda2/bin/python",required=TRUE)
#args should be:
#1. file containing a list of samples to analyse
#2. path to output directory
#3. file to save R data structure to.
#4. cellranger version
args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData')
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
cellranger_version<-args[4]
meta_data <- read.table('samples.txt',header=T)
objects<-c()
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
objects <- c(objects, seurat_object)
assign(paste0(sample),seurat_object)
}
dir
args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData','cellranger302')
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
cellranger_version<-args[4]
meta_data <- read.table('samples.txt',header=T)
objects<-c()
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
objects <- c(objects, seurat_object)
assign(paste0(sample),seurat_object)
}
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
assign(paste0(sample,"_plot1"),seurat_object)
}
objects
plot1
View(`4672STDY7631191`)
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0(sample,"_plot1"),seurat_object)
}
View(`4672STDY7631193_plot1`)
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0(seurat_object,"_plot1"),plot1)
}
objects<-c()
for (sample in samples){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
objects <- c(objects, seurat_object)
assign(paste0(sample),seurat_object)
}
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0(seurat_object,"_plot1"),plot1)
}
objects
samples
for (seurat_object in objects){seurat_object}
for (seurat_object in objects){
seurat_object
}
objects[[1]]
plot1<-VlnPlot(objects[[1]], features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
plot1
plot1<-VlnPlot(objects[[2]], features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
plot1
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0(seurat_object,"_plot1"),plot1)
}
for (seurat_object in objects){
VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
}
for (seurat_object in objects){
plot<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
}
plot
objects
seurat_objects[[1]]
objects[[1]]
objects[[1]]$orig.ident
View(`4672STDY7631191`)
objects[[1]]$
''
objects[[1]]
objects[1]
levels(objects[[1]]$orig.ident)
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0(levels(seurat_object$orig.ident),"_plot1"),plot1)
}
View(`4672STDY7631191_plot1`)
4672STDY7631191_plot1
4672STDY7631191_plot1
View(`4672STDY7631193_plot1`)
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0("plot1_"levels(seurat_object$orig.ident)),plot1)
}
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mito"), ncol = 3)
assign(paste0("plot1_",levels(seurat_object$orig.ident)),plot1)
}
plot1_4672STDY7623907
?VlnPlot
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
assign(paste0("plot1_",levels(seurat_object$orig.ident)),plot1)
}
plot1_4672STDY7623907
plot1_4672STDY7623908
plot1_4672STDY7623909
plot1_4672STDY7623910
for (seurat_object in objects){
plot1<-VlnPlot(seurat_object, features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plot2<-FeatureScatter(seurat_object,feature1="nFeature_RNA",feature2="percent.mito")
assign(paste0("plot1_",levels(seurat_object$orig.ident)),plot1)
assign(paste0("plot2_",levels(seurat_object$orig.ident)),plot2)
}
plot2_4672STDY7623907
plot1
plot2
CombinePlots(plots=list(plot1,plot2))
?CombinePlots
args <- commandArgs(TRUE) #or run args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData') to run the script from inside R studio
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
meta_data <- read.table('samples.txt',header=T)
####functions####
normalize_data<-function(sample,cellranger_version){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
#  assign(paste0(sample),seurat_object)
return(seurat_object)
}
samples
?lapply
seurat_obs<-lapply(samples,FUN=`normalize_data`,cellranger_version="cellranger211")
seurat_obs<-lapply(samples,FUN=`normalize_data`,cellranger_version=cellranger211)
seurat_obs<-lapply(samples,FUN=`normalize_data`,cellranger_version='cellranger211')
seurat_obs<-lapply(samples,FUN=`normalize_data`,'cellranger211')
cellranger_version
seurat_obs<-lapply(samples,FUN=`normalize_data`,'cellranger302')
cellranger_version
#For a set of control and infected libraries,
library(reticulate)
library(Seurat)
library(Matrix)
library(dplyr)
library(metap)
library(ggplot2)
library(ggrepel)
library(cowplot)
use_python("/Users/fr7/miniconda2/bin/python",required=TRUE)
#args should be:
#1. file containing a list of samples to analyse
#2. path to output directory
#3. file to save R data structure to.
#4. cellranger version
args <- commandArgs(TRUE) #or run args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData') to run the script from inside R studio
samples<-scan(args[1],what=character())
dir<-args[2]
data_file<-args[3]
meta_data <- read.table('samples.txt',header=T)
####functions####
normalize_data<-function(sample,cellranger_version){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
#  assign(paste0(sample),seurat_object)
return(seurat_object)
}
seurat_obs<-lapply(samples,FUN=`normalize_data`,'cellranger302')
args<-c('samples_to_analyse.txt','/Users/fr7/git_repos/single_cell','/Users/fr7/git_repos/single_cell/basic.RData'
)
dir<-args[2]
data_file<-args[3]
meta_data <- read.table('samples.txt',header=T)
####functions####
normalize_data<-function(sample,cellranger_version){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
#  assign(paste0(sample),seurat_object)
return(seurat_object)
}
#################
seurat_obs<-lapply(samples,FUN=`normalize_data`,'cellranger302')
samples<-scan(args[1],what=character())
seurat_obs<-lapply(samples,FUN=`normalize_data`,'cellranger302')
samples
normalize_data<-function(sample,cellranger_version){
data <- Read10X(data.dir = paste0(dir,"/count_matrices/",cellranger_version,"/",sample),unique.features = TRUE)
seurat_object <- CreateSeuratObject(counts=data, project = paste0(sample))
seurat_object[["infection_status"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'treatment'])
seurat_object[["experiment"]] <- as.character(meta_data[which(meta_data$sample_id == sample),'experiment'])
seurat_object[["cellranger_version"]]<-cellranger_version
seurat_object[["percent.mito"]] <- PercentageFeatureSet(seurat_object, pattern = "^mt-")
seurat_object <- NormalizeData(seurat_object)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst",nfeatures = 2000)
#  assign(paste0(sample),seurat_object)
return(seurat_object)
}
CR_v302<-lapply(samples,FUN=`normalize_data`,'cellranger302')
names(CR_v302)<-samples
CR_v302
CR_v302[["4672STDY7631193"]]
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plot2<-VlnPlot(CR_302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
}
sample
CR_v302[["4672STDY7631193"]]
CR_v211[["4672STDY7631193"]]
CR_v211<-lapply(samples,FUN=`normalize_data`,'cellranger211')
names(CR_v211)<-samples
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plot2<-VlnPlot(CR_302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
}
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0)
plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
}
`4672STDY7623907_vlnplots`
?VlnPlot
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='green')
plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
}
`4672STDY7623907_vlnplots`
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
}
`4672STDY7623907_vlnplots`
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plot3<-FeatureScatter(CR_v211[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="red")
plot4<-FeatureScatter(CR_v302[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="forestgreen")
plots<-CombinePlots(plots=list(plot1,plot2,plot3,plot4))
assign(paste0(sample,"_vlnplots"),plots)
}
`4672STDY7623907_vlnplots`
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plot3<-FeatureScatter(CR_v211[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="red")
plot4<-FeatureScatter(CR_v302[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="forestgreen")
plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
plots<-CombinePlots(plots=list(plot3,plot4))
assign(paste0(sample,"_scatterplots"),plots)
}
`4672STDY7623907_scatterplots`
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plot3<-FeatureScatter(CR_v211[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="red")
plot4<-FeatureScatter(CR_v302[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="forestgreen")
vln.plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
all_violins<-CombinePlots(plots=list(all_violins,vln.plots),ncol = 2)
scatter.plots<-CombinePlots(plots=list(plot3,plot4))
assign(paste0(sample,"_scatterplots"),plots)
}
all_violins<-list()
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plot3<-FeatureScatter(CR_v211[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="red")
plot4<-FeatureScatter(CR_v302[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="forestgreen")
vln.plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),plots)
all_violins<-CombinePlots(plots=list(all_violins,vln.plots),ncol = 2)
scatter.plots<-CombinePlots(plots=list(plot3,plot4))
assign(paste0(sample,"_scatterplots"),plots)
}
all_violins
pdf('test.pdf')
all_violins
dev.off()
all_violins<-c()
all_scatters<-c()
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plot3<-FeatureScatter(CR_v211[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="red")
plot4<-FeatureScatter(CR_v302[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="forestgreen")
vln.plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),vln.plots)
all_violins<-c(all_violins,vln.plots)
scatter.plots<-CombinePlots(plots=list(plot3,plot4))
assign(paste0(sample,"_scatterplots"),scatter.plots)
all_scatters<-c(all_scatters,scatter.plots)
}
names(all_violins)<-lapply(samples,FUN=`append_name`,"_vlnplots")
names(all_scatters)<-lapply(samples,FUN=`append_name`,"_vlnplots")
append_name<-function(string,text){
string<-paste0(string,"text")
return(string)
}
names(all_violins)<-lapply(samples,FUN=`append_name`,"_vlnplots")
names(all_scatters)<-lapply(samples,FUN=`append_name`,"_vlnplots")
all_violins
CombinePlots(plots=all_violins,ncol=2)
pdf('test.pdf')
CombinePlots(plots=all_violins,ncol=2)
dev.off()
warnings()
all_violins[[1]]
View(`4672STDY7631193_vlnplots`)
`4672STDY7623907_scatterplots`
all_violins<-c()
all_scatters<-c()
for (sample in samples){
plot1<-VlnPlot(CR_v211[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='red')
plot2<-VlnPlot(CR_v302[[sample]], features = c("nFeature_RNA", "percent.mito"), ncol = 2, pt.size = 0,cols='forestgreen')
plot3<-FeatureScatter(CR_v211[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="red")
plot4<-FeatureScatter(CR_v302[[sample]],feature1="nFeature_RNA",feature2="percent.mito",cols="forestgreen")
vln.plots<-CombinePlots(plots=list(plot1,plot2))
assign(paste0(sample,"_vlnplots"),vln.plots)
all_violins<-c(all_violins,plot1,plot2)
scatter.plots<-CombinePlots(plots=list(plot3,plot4))
assign(paste0(sample,"_scatterplots"),scatter.plots)
all_scatters<-c(all_scatters,plot1,plot2)
}
CombinePlots(plots=all_violins,ncol=2)
pdf('test.pdf')
print(CombinePlots(plots=all_violins,ncol=2))
dev.off()
test<-ggarrange(all_violins,ncol=2)
install.packages(ggpubr)
install.packages('ggpubr')
library(ggpubr)
test<-ggarrange(all_violins,ncol=2)
all_violins
test<-ggarrange(all_violins,ncol=2)
ggarange(plot1,plot2)
ggarrange(plot1,plot2)
ggarrange(plot1,plot2,plot3,plot4)
plot1
test<-c(plot1,plot2)
test
ggarrange(test)
ggarrange(plotlist=test)
ggarrange(plotlist=test)
pdf('test.pdf')
ggarrange(plotlist=test)
dev.off()
warnings()
